{"version":3,"sources":["App.js","index.js"],"names":["renderD3","dataMap","dataEdu","length","margin","top","left","right","bottom","height","width","svg","d3","append","attr","path","colorScale","scaleLinear","domain","range","legendScale","legend","selectAll","data","join","value","text","div","style","states","topojson","objects","features","enter","counties","find","fips","id","bachelorsOrHigher","countyEdu","on","html","area_name","state","Math","round","pageX","pageY","App","useEffect","a","Promise","all","fetch","responses","map","response","json","userEd","getData","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f4ca672.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport * as d3 from \"d3\"\nimport * as topojson from 'topojson-client'\nimport { scaleLinear, color, text } from 'd3';\n\n\nfunction App() {\n\n  useEffect(() => {\n\n    async function getData() {\n      const responses = await Promise.all([fetch(\"https://cdn.freecodecamp.org/testable-projects-fcc/data/choropleth_map/counties.json\"), fetch(\"https://cdn.freecodecamp.org/testable-projects-fcc/data/choropleth_map/for_user_education.json\")]);\n      const [counties, userEd] = await Promise.all(\n        responses.map(response => response.json())\n      );\n      renderD3(counties, userEd)\n    }\n      \n    getData()\n\n  }, [])\n\n\n\n  return (\n    <div className=\"container\">\n      <h1 id=\"title\">United States Educational Attainment</h1>\n      <h2 id=\"description\">Percentage of adults age 25 and older with a bachelor's degree or higher (2010-2014)</h2>\n      <div id=\"map\"></div>\n      <div id=\"legend\" className=\"legend\"></div>\n    </div>\n  );\n}\n\nconst renderD3 = (dataMap, dataEdu) => {\n  if (dataEdu.length > 0) {\n    let margin = { top: 0, left: 0, right: 0, bottom: 0 };\n    let height = 600 - margin.top - margin.bottom\n    let width = 1000 - margin.left - margin.right;\n\n\n    let svg = d3.select(\"#map\")\n                .append(\"svg\")\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .attr(\"width\", width + margin.left + margin.right)\n                .append('g')\n                .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n\n\n    let path = d3.geoPath()\n\n\n\n    const colorScale = scaleLinear()\n                        .domain([3, 12, 21, 30, 39, 48, 57, 66])\n                        .range([\"#8F9FB3\", \"#8F9FB3\", \"#788CA3\", \"#627994\", \"#4B6585\", \"#355275\", \"#1E3F66\"])\n\n\n    // X Axis for ColorScale Legend\n    let xAxis = d3.axisBottom(colorScale)\n\n    const legendScale = scaleLinear()\n                        .domain([3, 12, 21, 30, 39, 48, 57, 66])\n                        .range([3, 12, 21, 30, 39, 48, 57, 66])\n\n\n    let legend = d3.select(\".legend\")\n                   .append('svg')\n                   .attr(\"class\", \"legend\")\n                  \n\n\n    legend.selectAll(\".color\")\n          .data([3, 12, 21, 30, 39, 48, 57, 66])\n          .join(\"rect\")\n          .attr(\"class\", \"color\")\n          .attr(\"height\", 20)\n          .attr(\"width\", 50)\n          .attr(\"fill\", value => colorScale(value))\n          .attr(\"x\", value => legendScale(value)+90)\n  \n    legend.append('g')\n          .append('text')\n          .text(\"Dark = High %\")\n          .attr(\"x\", 100)\n          .attr('y', 39)\n\n    \n    let div = d3.select(\".container\").append('div')\n                        .attr(\"class\", \"tooltip\")\n                        .attr(\"id\", \"tooltip\")\n                        .style(\"opacity\", 0);\n    \n    \n    let states = topojson.feature(dataMap, dataMap.objects.states).features\n\n\n    svg.selectAll(\".state\")\n       .data(states)\n       .enter().append(\"path\")\n       .attr(\"class\", \"state\")\n       .attr('d', path)\n       .attr(\"stroke\", \"white\")\n\n\n    \n   let counties = topojson.feature(dataMap, dataMap.objects.counties).features\n\n   svg.selectAll(\".county\")\n      .data(counties)\n      .enter().append(\"path\")\n      .attr(\"class\", \"county\")\n      .attr(\"data-fips\", value => {\n        let countyEdu = dataEdu.find(data => {\n          return data.fips === value.id\n        })\n          return countyEdu.fips\n      })\n      .attr(\"data-education\", value => {\n        let countyEdu = dataEdu.find(data => {\n          return data.fips === value.id\n        })\n        return countyEdu.bachelorsOrHigher\n      })\n      .attr('d', path)\n      .attr(\"fill\", value => {\n        let countyEdu = dataEdu.find(data => {\n          return data.fips === value.id\n        })\n        return colorScale(countyEdu.bachelorsOrHigher)\n      })\n      .on(\"mouseover\", value => {\n        let countyEdu = dataEdu.find(data => {\n          return data.fips === value.id\n        })\n        div.style(\"opacity\", 0.9)\n        div.html(countyEdu.area_name + ', ' + countyEdu.state + ': ' + Math.round(countyEdu.bachelorsOrHigher) + '%')\n           .style(\"left\", (d3.event.pageX) + \"px\")\n           .style(\"top\", (d3.event.pageY - 80) + \"px\");\n\n        div.attr(\"data-education\", () => {\n          let countyEdu = dataEdu.find(data => {\n            return data.fips === value.id\n          })\n          return countyEdu.bachelorsOrHigher\n        })\n      })\n      .on(\"mouseleave\", () => { div.style(\"opacity\", 0) .style('top', 0)})\n\n\n\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}